{"version":3,"sources":["TestApp\\index.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiBI,oBAAI,iCAAJ;;AACI,iCAAR;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKK;AAAA;;AAEe;AAFN;;;;;;;;;;;;0BAEC;AAAA;AAAE;;;;;;;;uBAGG;AACR,+CAAR;AAAA;AAAA;AACQ,+CAAR;AAAA;AAAA;AACQ,gDAAR;AAAA;AAAA;AACQ,oDAAR;AAAA;AAAA;AACQ,mDAAR;AAAA;AAAA;AACQ,6CAAR;AAAA;AAAA;AACQ,8CAAR;AAAA;AAAA;AACQ,+CAAR;AAAA;AAAA;AAEc;AACyB;AAAA;;AAAA;AAAQ,2CAAR;AAAA;AAAA;AAA0B,aAA1B;AAA0B,SADnD;AAE+B;AAAQ,uCAAR;AAAA;AAAA;AAAc;AAF7C;;AAId;AAdiB,C;;AAiBrB,6BACI;AAAA,gCAAgC;AAAA,kBAAe;AAAa,8CAAR;AAAA;AAAA,cAAL;AAAC,SAAhB;AACQ,mCAAR;AAAA;AAAA;AAAc,KAD9C;AAC+C;;AAEnB,2BAAR;AAAA;AAAA,EAAxB;AACsC,2BAAR;AAAA;AAAA,EAA9B;AAKc,2BAAR;AAAA;AAAA,EAJN,oCAA2B;AAAA;AAAA;AAAA,CAA3B;AAQc,2BAAR;AAAA;AAAA,EAHN,oCAA2B;AAAA;AAAA;AAAA,CAA3B;;qBAMQ;AAAK;AACC;AACV,aAAU,eAAV;AACW;AACD;;AACV,iCACI;AAAQ,mCAAR;AAAA;AAAA,WAAa;AAAA;AAAc,SAA3B;AAA2B;;AAC/B;;AACA;;AACA;;AACA,6CAAiC;AAAA;AAAA,KAAjC;;AACA;;AACA;;AACA;;AACA;;AACgC,oDAAR;AAAA;AAAA,MAAxB;AAfM,C;;;;;AAoBV,aAAc;AAAA;AAAA;AAAA;AAAA,EAA+B;AAAQ,2DAAR;AAAA;AAAA;AACA,cAAW,WAAX;;AACA,QAAG,YAAH,EACG;AAAA;AAA+B;AAAA,CAHjE,OAAd;;AAKA;AAAA;AAAA;AAAA;AAAA,GAAuB;AAAa,uCAAb;AAAA;AAAA;AAAC,CAAxB","file":"index.js","sourcesContent":["ï»¿module Index\r\nopen Fable.Core\r\nopen Fable.Import.Meteor.Mongo\r\nopen Fable.Core.JsInterop\r\n\r\nopen Fable\r\nopen Fable.Import.JS\r\nopen Fable.Core.JsInterop\r\nopen System\r\nopen Fable.Import.Meteor.Meteor\r\nopen Fable.Import.Meteor.Mongo\r\nopen MyCollections\r\n\r\n\r\n\r\n\r\n\r\nlet s = todos.find().count()\r\nprintfn \"Count %i\" s\r\ntype TestType = {\r\n    Value : string\r\n} \r\n\r\ntype TestType1() = \r\n    member x.Ok = \"localhost\"   \r\n    member val No = \"127.0.0.1\" with get,set\r\n\r\n\r\nMeteor.startup (fun _ -> \r\n    printfn \"Meteor.isServer %A\" Meteor.isServer\r\n    printfn \"Meteor.isClient %A\" Meteor.isClient\r\n    printfn \"Meteor.isCordova %A\" Meteor.isCordova\r\n    printfn \"Meteor.isDevelopment %A\" Meteor.isDevelopment\r\n    printfn \"Meteor.isProduction %A\" Meteor.isProduction\r\n    printfn \"Meteor.isTest %A\" Meteor.isTest\r\n    printfn \"Meteor.release %A\" Meteor.release\r\n    printfn \"Meteor.settings %A\" Meteor.settings\r\n\r\n    let methods = createObj [\r\n        \"new_method\" ==> JsFunc0(fun () -> printfn \"%A\" jsThis?userId)\r\n        \"anotherTestMethod\" ==> JsFunc1(fun a -> printfn \"%A\" a)\r\n    ]\r\n    Meteor.methods methods\r\n    )\r\n\r\nif Meteor.isServer then\r\n    Meteor.onConnection(fun x ->    x.onClose (fun _ -> printfn \"%s closed\" x.id ) \r\n                                    printfn \"%A\" x)\r\n\r\nMeteor.absoluteUrl() |> printfn \"%s\"\r\nMeteor.absoluteUrl(\"path\") |> printfn \"%s\"\r\nMeteor.absoluteUrl(\"path\", [\r\n    Secure\r\n    ReplaceLocalhost\r\n\r\n]) |> printfn \"%s\" \r\nMeteor.absoluteUrl(\"path\", [ \r\n    Secure\r\n    RootUrl(\"http://neftedollar.com\")\r\n]) |> printfn \"%s\"\r\n    \r\nMeteor.defer(fun () ->\r\n    let tt = { Value = \"HI all\" }\r\n    let tt1 = TestType1()\r\n    tt1.No <- tt1.No + tt1.No\r\n    let tt1s = JSON.stringify(tt1)\r\n    let tts = JSON.stringify(tt)\r\n    if Meteor.isServer then\r\n        printfn \"%A\" Meteor.methods\r\n    Meteor.call(\"new_method\") |> ignore\r\n    Meteor.call(\"anotherTestMethod\", \"lol\") |> ignore\r\n    Meteor.call(\"anotherTestMethod\", 3) |> ignore\r\n    Meteor.call(\"anotherTestMethod\", createObj [ \"lol\" ==> 3 ]) |> ignore\r\n    Meteor.call(\"anotherTestMethod\", tt) |> ignore\r\n    Meteor.call(\"anotherTestMethod\", tt1 ) |> ignore\r\n    Meteor.call(\"anotherTestMethod\", tts) |> ignore\r\n    Meteor.call(\"anotherTestMethod\", tt1s ) |> ignore\r\n    todos.find().count() |> printfn \"Todos.find().count() %A\"\r\n)\r\n\r\nlet mutable private IntervalId = 0.0\r\nlet mutable private counter = 0\r\nIntervalId <- Meteor.setInterval (fun () ->  printfn \"Interval is 1500 counter is %i\" counter\r\n                                             counter <- counter + 1\r\n                                             if counter >= 4 then\r\n                                                Meteor.clearInterval IntervalId\r\n                                            ) 1500\r\nMeteor.setTimeout (fun _ -> printfn \"TIMEOUT!!!\") 1000 |> ignore"]}